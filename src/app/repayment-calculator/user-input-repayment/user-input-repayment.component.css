form {
    background-color: whitesmoke;
      padding: 1rem 3rem 3rem 1rem;
      max-width: 40rem;
      margin: 2rem auto;
      border-radius: 4px;
      /* background: linear-gradient(180deg, #307e6c, #2b996d); */
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }
  
    label {
      display: block;
      margin-top: 2rem;
      margin-bottom: 1rem;
      font-family: 'Gelasio', serif;
      font-size: 1rem;
      font-weight: bold;
      text-transform: uppercase;
    }
    
    .input-group {
      display: flex;
      justify-content: space-evenly;
      gap: 1.5rem;
      position: relative,
    }

    input {
      width: 100%;
      padding: 0.5rem;
      /* border: 1px solid #76c0ae; */
      border-radius: 0.25rem;
      background-color: transparent;
      /* color: #c2e9e0; */
      font-size: 1rem;
    }


   .custom-slider{
    z-index: 0;
  }

  ::ng-deep.ngx-slider .ngx-slider-pointer{
    background-color: #006452 !important;
    cursor: col-resize !important;
    border-radius: 0 !important;
    height: 1rem !important;
    width: 0.5rem !important;
    border-bottom-left-radius: 3px !important;
    border-bottom-right-radius: 3px !important;
    top: auto !important; 
    bottom: 0 !important;
   }


   ::ng-deep.ngx-slider .ngx-slider-pointer:after {
    display: none !important;
  }

  ::ng-deep.ngx-slider .ngx-slider-bubble {
    bottom: 14px !important;
  }


  ::ng-deep.ngx-slider .ngx-slider-tick {
    width: 1px !important;
    height: 10px !important;
    margin-left: 4px !important;
    border-radius: 0 !important;
    background: #ffe4d1;
    top: -1px !important;
  }


/* The container */
.container {
  display: block;
  position: relative;
  padding-left: 2rem;
  margin-bottom: 1rem;
  cursor: pointer;
  font-size: 1rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-transform: initial;
}

/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #dddddd;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #006452;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark:after {
 	top: 9px;
	left: 9px;
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background: white;
}

.special-input-group{
  display: flex;
  justify-content: space-evenly;
  gap: 1.5rem;
  position: relative;
  margin-left: 3rem;

}